{"version":3,"sources":["Components/ProjectItem.js","Components/Projects.js","Components/layout/GitButtonItem.js","Components/layout/GitButton.jsx","Components/layout/Headers.js","Components/Addlist.js","Components/IsProjectItem.js","Components/IsCompleted.js","Components/pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["ProjectsItem","checkComplete","textDecoration","props","projectItem","isCompleted","textChange","e","target","value","setState","name","alert","onSubmit","preventDefault","editbtn","state","updtitle","_id","style","this","type","onChange","markCompleted","bind","title","display","placeholder","btnStyle","onClick","delbtn","Component","background","color","border","padding","borderRadius","cursor","float","Projects","projects","map","project","i","ProjectItem","GitButtonItem","GithubItem","status","stringstyle","OutGitbtn","href","GitButton","gitLoop","item","Header","useState","Git","useCookies","cookies","setCookie","id","a","console","log","data","axios","method","url","headers","then","res","token","loopSetCookie","forEach","get","Addlist","flex","IsProjectsItem","checked","IsCompleted","Projects_Completed","IsProjectItem","checkCompleted","About","Fragment","App","response","catch","Connection","filterAdd","filter","Project","element","className","Headers","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.7b4ce07b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n//import App from '../App'\r\nimport PropTypes from \"prop-types\";\r\n//import UpdateIcon from \"@material-ui/icons/Update\";\r\n\r\nclass ProjectsItem extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      updtitle: \"\"\r\n    };\r\n  }\r\n\r\n  checkComplete = () => {\r\n    if (true)\r\n      return {\r\n        textDecoration: this.props.projectItem.isCompleted\r\n          ? \" line-through\"\r\n          : \"none\",\r\n      };\r\n  };\r\n\r\n  textChange = (e) => {\r\n    // console.log('tetchng', e.target.value)\r\n     if(e.target.value !== ' '){\r\n     this.setState({ [e.target.name] : e.target.value})\r\n     } else {\r\n       alert('Enter Text');\r\n     }\r\n }\r\n \r\nonSubmit= (e) =>{\r\n  e.preventDefault();\r\n  this.props.editbtn( this.state.updtitle, this.props.projectItem._id)\r\n}\r\n\r\n  //   markCompleted = (e) => {\r\n  //     console.log(this.props.projectItem.completed);\r\n  //     this.props.projectItem.completed = !this.props.projectItem.completed;\r\n  //     return this.checkComplete();\r\n  //   };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={this.checkComplete()}>\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={this.props.markCompleted.bind(\r\n                this,\r\n                this.props.projectItem._id\r\n              )}\r\n            />\r\n\r\n            {this.props.projectItem.title}\r\n\r\n\r\n            <form onSubmit={this.onSubmit} style={{ display: \"flex\" }}>\r\n              <br></br>\r\n              <input\r\n                type=\"text\"\r\n                name=\"updtitle\"\r\n                placeholder=\"Change Title\"\r\n                value={this.state.updtitle}\r\n                onChange={this.textChange}\r\n              />\r\n              <button\r\n                style={btnStyle}\r\n              >\r\n               Edit\r\n              </button>\r\n            </form>\r\n\r\n\r\n            <button\r\n              onClick={this.props.delbtn.bind(this, this.props.projectItem._id)}\r\n              style={btnStyle}\r\n            >\r\n              x\r\n            </button>\r\n \r\n          </p>\r\n\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nProjectsItem.propTypes = {\r\n  projectItem: PropTypes.object.isRequired,\r\n};\r\n\r\nconst btnStyle = {\r\n  background: \"#ff0000\",\r\n  color: \"#fff\",\r\n  border: \"none\",\r\n  padding: \"5px 8px\",\r\n  borderRadius: \"50%\",\r\n  cursor: \"pointer\",\r\n  float: \"right\",\r\n};\r\n\r\nexport default ProjectsItem;\r\n","import React, { Component } from \"react\";\r\n//import App from '../App'\r\nimport ProjectItem from \"./ProjectItem\";\r\n//import PropTypes from \"prop-types\";\r\n\r\nclass Projects extends Component {\r\n\r\n  render() {\r\n\r\n    return this.props.projects.map((project, i) => {\r\n      \r\n      return <ProjectItem key={i} projectItem={project}\r\n       markCompleted={this.props.markCompleted} delbtn={this.props.delbtn}\r\n        editbtn={this.props.editbtn} />;\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n// Projects.propTypes ={\r\n//     project: PropTypes.array.isRequired\r\n// }\r\n\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\n//import App from '../App'\r\n// import PropTypes from \"prop-types\";\r\nimport GithubButton from \"react-github-login-button\";\r\n\r\nclass GitButtonItem extends Component {\r\n\r\n  render() {\r\n    //console.log(this.props.GithubItem.name);\r\n\r\n   \r\n\r\n    return (\r\n      <>\r\n  \r\n\r\n        {this.props.GithubItem.status ? \r\n        \r\n          <p style={stringstyle}>\r\n            Hello,{this.props.GithubItem.name} |\r\n            <button\r\n              onClick={this.props.OutGitbtn.bind(\r\n                this,\r\n                this.props.GithubItem._id)} >\r\n              LOGOUT\r\n            </button>\r\n          </p>\r\n        : \r\n        <p>\r\n          <a href=\"http://localhost:5000/github\">\r\n            <GithubButton\r\n              onClick={this.props.OutGitbtn.bind(\r\n                this,\r\n                this.props.GithubItem._id)} \r\n               // onClick={this.setCookie}\r\n               />\r\n          </a>\r\n          </p>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst stringstyle = {\r\n  color: \"blue\",\r\n  borderRadius: \"1%\",\r\n  float: \"right\",\r\n};\r\n\r\nexport default GitButtonItem;\r\n","import React, { Component } from \"react\";\r\nimport GitButtonItem from \"./GitButtonItem\";\r\n\r\nclass GitButton extends Component {\r\n\r\n  render() {\r\n    return this.props.gitLoop.map((item, i) => {\r\n      return (\r\n        <GitButtonItem\r\n          key={i}\r\n          GithubItem={item}\r\n          OutGitbtn={this.props.OutGitbtn}\r\n        />\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default GitButton;\r\n","import React, { useState } from \"react\";\r\nimport GitButton from \"./GitButton\";\r\nimport GithubButton from \"react-github-login-button\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst Header = () => {\r\n  \r\n const [Git, setState] = useState([]);\r\n\r\n \r\n  const [cookies, setCookie] = useCookies('token');\r\n\r\n  setCookie(Git.token, cookies);\r\n\r\n //console.log(cookies)\r\n    Git.forEach((e) => {\r\n     // console.log(e.token)\r\n      setCookie(e.token);\r\n    });\r\n    \r\n   \r\n  \r\n\r\n\r\n  axios.get(\"http://localhost:5000/postsgitall\")\r\n  .then((res) => \r\n      //console.log()\r\n       setState( res.data)\r\n       \r\n      //  console.log(\"hAo\",this.state.Git)\r\n    );\r\n  // setCookie(cname, cvalue, exdays) {\r\n  //   console.log(\"from set cookie\",cname, cvalue,exdays)\r\n  //   console.log(cvalue)\r\n  //   var d = new Date();\r\n  //   d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n  //   var expires = \"expires=\"+d.toUTCString();\r\n  //   document.cookie = cname + \"=\" + cvalue + \";\" + expires + \"For 10 Mins\";\r\n  //   console.log('called setcookie')\r\n  // }\r\n \r\n\r\nasync function  OutGitbtn (id)  {\r\n    console.log('clicked git',id)\r\n   console.log('call 2')\r\n\r\n\r\n   const data = {  \r\n    };\r\n    await axios({\r\n      method: \"get\",\r\n      url: `http://localhost:5000/postsgitall`,\r\n      data: data,\r\n      headers: {\r\n         \"Content-Type\": \"application/json\",\r\n         \"Connection\" : \"Keep-alive\"\r\n     },\r\n    })\r\n      .then((res) => {\r\n        console.log('response ',res);\r\n        console.log('response for name',res.data.token);\r\n        // this.setState( { Git : res.data }\r\n        //         )\r\n        //   console.log(\"hAo\",this.state.Git)\r\n         \r\n        \r\n      })\r\n\r\n      this.loopSetCookie(); \r\n     \r\n  }\r\n\r\n\r\n//   function loopSetCookie () {\r\n//     console.log('clicked');\r\n   \r\n//     this.state.Git.forEach((d) => {\r\n//       console.log('fet')\r\n//       // const a = d.status = !d.status;\r\n//       //  this.setState({ Git : [d.status = a ] })\r\n//          console.log('fet',d)\r\n//      //  this.setCookie(d.name, d.token, 10)\r\n  \r\n//     });\r\n\r\n// }\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n          <button  > loop </button>\r\n          {<h1>Hello {cookies.name}{cookies.token}!</h1>}\r\n         NAME =    <div>\r\n           {Git.map( (e) => {\r\n          <div>{ e.name }</div>\r\n        }\r\n           )}\r\n        </div> \r\n        {Git.token}\r\n            <h3>TODO LIST</h3>\r\n            <li>\r\n              <a href=\"/\">Home  |  </a>\r\n            </li>\r\n\r\n            <li>\r\n               <GitButton gitLoop={Git}\r\n             OutGitbtn={OutGitbtn}  /> \r\n</li>\r\n<li>\r\n          <p>\r\n          <a href=\"http://localhost:5000/github\">\r\n            <GithubButton\r\n              onClick={OutGitbtn} \r\n               />\r\n          </a>\r\n         \r\n          </p>\r\n            </li>\r\n          \r\n          </ul>\r\n        </nav>\r\n\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\n\r\nclass Addlist extends Component {\r\n    constructor(){\r\n        super();\r\n    this.state = {\r\n        title : ''\r\n    }\r\n}\r\n\r\nonSubmit= (e) =>{\r\n    e.preventDefault();\r\n    this.props.Addlist( this.state.title)\r\n    this.setState({ title : ''} ) //back to empty title\r\n}\r\n\r\ntextChange = (e) => {\r\n   // console.log('tetchng', e.target.value)\r\n    if(e.target.value !== ''){\r\n    this.setState({ [e.target.name] : e.target.value})\r\n    }\r\n}\r\n\r\nrender() {\r\n        return (\r\n\r\n            <div>\r\n                <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n                <br></br>\r\n                    <input type=\"text\" style={{flex: '10', padding: '5px'}}\r\n                     name=\"title\" placeholder=\"Enter To Add to list\" \r\n                     value={this.state.title}\r\n                     onChange={this.textChange} />\r\n                    <button value={this.state.id} style={{flex: '1'}}>Add</button>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n}\r\n    \r\n\r\n}\r\n\r\nexport default Addlist;","import React, { Component } from \"react\";\r\n//import App from '../App'\r\n//import PropTypes from \"prop-types\";\r\n\r\nclass IsProjectsItem extends Component {\r\n  checkComplete = () => {\r\n    if (true)\r\n      return {\r\n        textDecoration: this.props.projectItem.isCompleted\r\n          ? \" line-through\"\r\n          : \"none\",\r\n      };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={this.checkComplete()}>\r\n          <p>\r\n            <input type=\"checkbox\" checked />\r\n\r\n            {this.props.projectItem.title}\r\n\r\n            <button\r\n              onClick={this.props.delbtn.bind(this, this.props.projectItem._id)}\r\n              style={btnStyle}\r\n            >\r\n              x\r\n            </button>\r\n\r\n            {/* <input type=\"checkbox\" onChange={this.markCompleted.bind()} /> */}\r\n          </p>\r\n          {/* <ul>{this.props.projectItem.category}</ul> */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// IsProjectsItem.propTypes = {\r\n//   IsprojectItem: PropTypes.object.isRequired,\r\n// };\r\n\r\nconst btnStyle = {\r\n  background: \"#ff0000\",\r\n  color: \"#fff\",\r\n  border: \"none\",\r\n  padding: \"5px 8px\",\r\n  borderRadius: \"50%\",\r\n  cursor: \"pointer\",\r\n  float: \"right\",\r\n};\r\n\r\nexport default IsProjectsItem;\r\n","import React, { Component } from \"react\";\r\nimport IsProjectItem from \"./IsProjectItem\";\r\n//import PropTypes from \"prop-types\";\r\n\r\nclass IsCompleted extends Component {\r\n \r\n  render() {\r\n    // console.log(this.props.projects);\r\n    // if(this.props.projects){\r\n\r\n    return this.props.Projects_Completed.map((project, i) => {\r\n      \r\n      return <IsProjectItem key={i}  projectItem={project}\r\n       delbtn={this.props.delbtn} checkCompleted={this.props.checkCompleted} />;\r\n    });\r\n\r\n    // return (\r\n    //     <>\r\n    //     </>\r\n    // )\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n// IsCompleted.propTypes ={\r\n//     IsCompleted: PropTypes.array.isRequired\r\n// }\r\n\r\nexport default IsCompleted;\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n\r\n        return (\r\n          <React.Fragment>\r\n              <h1> ABOUT PAGE </h1>\r\n              <p> Making through react js/ router</p>\r\n\r\n          </React.Fragment>\r\n\r\n        )\r\n    \r\n\r\n}\r\n\r\nexport default About;","import React, { Component } from \"react\";\nimport Projects from \"./Components/Projects\";\nimport Headers from \"./Components/layout/Headers\";\nimport Addlist from \"./Components/Addlist\";\nimport IsCompleted from \"./Components/IsCompleted\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport About from \"./Components/pages/About\";\nimport axios from \"axios\";\nimport \"../src/App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Projects: [],\n      Projects_Completed: [],\n    };\n  }\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/posts\").then((res) => {\n      res.data.forEach((element) => {\n        //console.log (element);\n        //  this.setState({ Projects: [...this.state.Projects, element] });\n\n        if (element.isCompleted === false) {\n          //    console.log(element);\n          this.setState({ Projects: [...this.state.Projects, element] });\n        } else {\n          // console.log (element);\n          this.setState({\n            Projects_Completed: [...this.state.Projects_Completed, element],\n          });\n        }\n      });\n    });\n  }\n\n  \n  //ADD\n  Addlist = (title) => {\n    const data = {\n      title: title,\n    };\n    if (title != null) {\n      axios({\n        method: \"post\",\n        url: \"http://localhost:5000/posts\",\n        data: data,\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then(function (response) {\n          console.log(\"ADD\",response);\n        })\n        .catch(function (response) {\n          console.log(\"ADDE\",response);\n        });\n    }\n    this.setState({ Projects: [...this.state.Projects, data] });\n    console.log(this.state.Projects);\n  };\n\n  //CheckBox\n  markCompleted = (id) => {\n    this.setState({\n      Projects: this.state.Projects.map((project) => {\n        if (project._id === id) {\n          project.isCompleted = !project.isCompleted;\n          console.log(project.isCompleted);\n          this.setState({\n            Projects_Completed: [...this.state.Projects_Completed, project],\n          });\n\n          const data = {\n            isCompleted: project.isCompleted,\n          };\n          axios({\n            method: \"put\",\n            url: `http://localhost:5000/posts/${id}`,\n            data: data,\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Connection: \"Keep-alive\",\n            },\n          })\n            .then(function (response) {\n              console.log(response);\n            })\n            .catch(function (response) {\n              console.log(response);\n            });\n        }\n\n        return project;\n      }),\n\n      // Projects: this.state.Projects.filter((project) => {\n      //   return project._id !== id;\n      // }),\n     \n    });\n    this.filterAdd(id);\n  };\n\n  filterAdd = (id) => {\n    this.setState({\n     Projects: this.state.Projects.filter((project) => {\n        return project._id !== id;\n  })\n    })\n  }\n\n  //Delete\n  delbtn = (id) => {\n    const data = {\n      _id: id,\n    };\n    axios({\n      method: \"delete\",\n      url: `http://localhost:5000/posts/${id}`,\n      data: data,\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then(function (response) {\n        console.log('delete Response',response);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n\n    this.setState({\n      Projects: this.state.Projects.filter((project) => {\n        return project._id !== id;\n      }),\n      Projects_Completed: this.state.Projects_Completed.filter((project) => {\n        return project._id !== id;\n      }),\n    });\n  };\n\n\n  \n  //Edit\n  editbtn = (title, id) => {\n  \n    this.setState({\n    Project :this.state.Projects.forEach((project) => {\n         if (title != null && project._id === id) {\n           project.title  = title;\n           console.log(project.title);\n          } else if( title === null) {\n            return alert('Enter Text');\n           //break;\n          }\n       })\n       });\n\n\n    console.log(title)\n    console.log(id)\n    \n    const data = {\n      title: title,\n    };\n    axios({\n      method: \"put\",\n      url: `http://localhost:5000/posts/${id}`,\n      data: data,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Connection: \"Keep-alive\",\n      },\n    })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n\n\n\n  }\n\n\n  render() {\n    return (\n      <Router>\n        <div className=\"Container\">\n          <Headers />\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => (\n              <React.Fragment>\n                <Addlist Addlist={this.Addlist} />\n                <br></br>\n                <div>\n                  {\" \"}\n                  Pending:{\" \"}\n                  <Projects\n                    projects={this.state.Projects}\n                    markCompleted={this.markCompleted}\n                    delbtn={this.delbtn}\n                    editbtn={this.editbtn}\n                  />\n                </div>\n                <br></br>\n                <div>\n                  <hr></hr> Completed :{\" \"}\n                  <IsCompleted\n                    Projects_Completed={this.state.Projects_Completed}\n                    delbtn={this.delbtn}\n                    checkCompleted={this.checkCompleted}\n                  />\n                </div>\n              </React.Fragment>\n            )}\n          />\n          <Route path=\"/About\" component={About} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}